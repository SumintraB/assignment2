---
title: "ETC5513 Assignment2"
format: 
  html: default
  pdf: default
author: "Sumintra Boonmat"
editor: visual
---

## Assignment 2: git, GitHub, and the command line interface

1\. Create a new RStudio Project. In this folder, create a simple qmd file called that can be knitted into a HTML file. Show the result of the example.qmd knitted file.

-   **Start a new RStudio project** - create a new RStudio Project named "assignment2"

-   **Create and edit a .qmd file** - create a new file named "example.qmd". Update the YAML so the the document can be knitted into html and pdf by default.

    ![](images/knitted.png)

2\. From the command line interface, initialise this folder as a git repository and push it to the GitHub classroom repository.

-   **Open your terminal** and change into the project directory.\
    cd documents/assignment2

-   **Initialize a Git repository** in the current folder. This sets up version control for your project\
    git init

-   **Create a *.gitignore*** **file** and add .Rproj.user/ to exclude unnecessary RStudio project files from being tracked.

-   **Stage all project files** for commit.\
    git add .

-   **Commit the changes** with a clear message describing what was done\
    git commit -m "created project and qmd file"

-   **On GitHub**, create a new repository manually. Make sure **not to include** a **README, .gitignore, or license**.

-   **Copy the repository’s SSH URL** from GitHub.

-   **Link the local repository to the remote GitHub repository**:\
    git remote add origin git\@github.com:your-username/your-repository.git

-   **Push your local repository to GitHub.**\
    git push -u origin main

3\. Create a new branch called testbranch. Modify the file example.qmd and add the changes to both the local and remote repositories.

-   **Create and switch to a new branch called *testbranch***\
    git branch testbranch - creates a new branch named testbranch\
    git switch testbranch -switch to created branch

-   **Modify the example.qmd**

-   **Stage all the files**\
    git add .

-   **Make a commit**\
    git commit -m “modified example.qmd in step3”

-   **Push the commit to the remote testbranch on Github**\
    git push origin testbranch

4\. Create a folder called data, and add the data from Assignment 1 to that folder. Amend the previous commit to include the data folder. Push this amended commit to the remote.

-   **Create a new folder named *data* and place the data from assignment1**

-   **Stage all the new files**\
    git add .

-   **Make a commit with message**\
    git commit -m “added new data folder””

-   **Push the changes to the remote testbranch**\
    git push origin testbranch

5\. Switch back to the main branch and modify example.qmd in a different way such that it will conflict with testbranch. Commit and push these changes

-   **Switch back to main**\
    git switch main

<!-- -->

-   **Modify change on example.qmd file** - update the same part as on testbranch so it creates conflict with the testbranch.

-   **Stage and commit the change\
    **git add .\
    git commit -m “modified example.qmd on main”

-   **Push the changes to main**\
    git push origin main
